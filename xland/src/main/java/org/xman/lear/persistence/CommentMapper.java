package org.xman.lear.persistence;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.xman.lear.domain.Comment;
import org.xman.lear.domain.CommentExample;

public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int countByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int deleteByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    @Delete({
        "delete from x_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    @Insert({
        "insert into x_comment (title, author, ",
        "content, ctime, ",
        "memo)",
        "values (#{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{ctime,jdbcType=VARCHAR}, ",
        "#{memo,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="select last_insert_rowid()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    List<Comment> selectByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    @Select({
        "select",
        "id, title, author, content, ctime, memo",
        "from x_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Comment selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int updateByExampleSelective(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int updateByExample(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_comment
     *
     * @mbggenerated Sun Mar 22 21:57:23 CST 2015
     */
    @Update({
        "update x_comment",
        "set title = #{title,jdbcType=VARCHAR},",
          "author = #{author,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "ctime = #{ctime,jdbcType=VARCHAR},",
          "memo = #{memo,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Comment record);
}